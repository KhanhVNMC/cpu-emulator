; Jump to the main test sequence, generated by ChatGPT for testing
jmp .entry

; --- Main Entry ---
.entry:
    ldi     r0, 5      ; Load test value into r0
    call    .arithmetic_test
    call    .stack_test
    call    .branch_test
    ;call    .memory_test
    hlt               ; Halt the program after all tests

; --- Arithmetic Test ---
.arithmetic_test:
    ldi     r1, 10      ; Load 10 into r1
    ldi     r2, 15      ; Load 15 into r2
    ldi     r3, 20      ; Load 20 into r3
    sub     r3, r1      ; r3 -= r1
    mov     r4, r3      ; r4 = 10
    addi    r4, 5       ; 15 == 15
    cmp     r4, r2      ; Compare r4 with r2 (should be equal)
    jne     .error      ; If not equal, jump to error
    ret                 ; Return to main entry

; --- Stack Test ---
.stack_test:
    ldi     r5, 123    ; Load 123 into r5
    push    r5         ; Push r5 onto stack
    pop     r6         ; Pop into r6
    cmp     r5, r6     ; Compare r5 and r6
    jne     .error     ; If mismatch, jump to error
    ret                ; Return if successful

; --- Branching Test ---
.branch_test:
    ldi     r7, 50
    ldi     r8, 100
    cmp     r7, r8
    jlt     .branch_success  ; Jump if r7 < r8
    jmp     .error           ; Otherwise, test failed

.branch_success:
    ret                ; Return to main entry

; --- Memory Test (if applicable) ---
;.memory_test:
;    ldi     r7, 42
;    sto     0x200, r7  ; Store r7 into memory address 0x200
;    ldm     r8, 0x200  ; Load from memory address 0x200 into r8
;    cmp     r7, r8     ; Compare values
;    jne     .error     ; If not equal, jump to error
;    ret                ; Return to main entry

; --- Error Handler ---
.error:
    ldi     r0, 255    ; Load error code 255
    hlt                ; Halt with error state
